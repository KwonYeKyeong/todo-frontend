{"version":3,"sources":["utility/isDone.js","component/atom/Button.jsx","component/board/task/index.jsx","component/board/card/index.jsx","service/getCards.js","service/moveTo.js","page/Board.jsx","service/createCard.js","component/enrollment/title/index.jsx","component/atom/Input.jsx","page/Enrollment.jsx","App.js","serviceWorker.js","index.js"],"names":["isDone","target","Button","props","className","onClick","value","buttonClasses","join","Task","title","subject","id","move","event","stopPropagation","Card","tasks","map","task","key","a","todo","cards","filter","card","done","getCards","Promise","resolve","status","moveTo","Board","useState","updateCards","useEffect","result","index","findIndex","splice","push","Object","entries","to","createCard","titleList","body","console","log","e","Title","dispatch","type","Input","onChange","onKeyPress","inputClasses","reducer","buffer","action","concat","targetIndex","item","Error","Enrollment","history","setId","setTitle","useReducer","add","length","htmlFor","goBack","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b396afa3.chunk.js","sourcesContent":["function isDone(target) {\n    return target === 'done';\n\n}\n\nexport default isDone;\n","import React from 'react';\nimport '../../css/Button.css'\n\nfunction Button(props) {\n    const {className, onClick, value} = props;\n    const buttonClasses = ['button', className].join(' ');\n    return (\n        onClick ?\n            <button className={buttonClasses} onClick={onClick}>\n                {value}\n            </button>\n            :\n            <button className={className}>\n                {value}\n            </button>\n    );\n}\n\nexport default Button;\n","import React from 'react';\nimport '../../../css/Task.css';\n\nimport isDone from \"../../../utility/isDone\";\nimport Button from \"../../atom/Button\";\n\nfunction Task(props) {\n    const {title, subject, id, move} = props;\n    const onClick = (event) => {\n        event.stopPropagation();\n        move(id)\n    };\n\n    return (\n        <div className='task'>\n            {title}\n            {\n                !isDone(subject) && <Button className='task-btn' onClick={onClick} value='>'/>\n            }\n        </div>\n    );\n}\n\nexport default Task;\n","import React from 'react';\nimport Task from \"../task\";\nimport '../../../css/Card.css';\n\nfunction Card(props) {\n    const {subject, tasks, move} = props;\n    return (\n        <div className='card'>\n            <div className='title'>{subject}</div>\n            {\n                tasks.map(task => {\n                    return <Task key={task.id} title={task.title} subject={subject} id={task.id} move={move}/>\n                })\n            }\n\n        </div>\n    );\n}\n\nexport default Card;\n","async function getCards() {\n    const cards = {\n        'cards': [\n            {\n                'id': 1,\n                'title': 'study react',\n                'status': 'TODO'\n            },\n            {\n                'id': 2,\n                'title': 'study spring2',\n                'status': 'DONE'\n            },\n            {\n                'id': 3,\n                'title': 'study 메론',\n                'status': 'TODO'\n            },\n            {\n                'id': 4,\n                'title': 'study 김치',\n                'status': 'TODO'\n            },\n            {\n                'id': 5,\n                'title': 'study 오징어',\n                'status': 'TODO'\n            },\n            {\n                'id': 6,\n                'title': 'study 코끼리',\n                'status': 'TODO'\n            }\n        ]\n    };\n    const todo = cards['cards'].filter(card => card['status'] === 'TODO');\n    const done = cards['cards'].filter(card => card['status'] === 'DONE');\n    return {\n        todo, done\n    }\n}\n\nexport default getCards;\n","async function moveTo(id) {\n    try {\n        return Promise.resolve({\n            id, status: 'DONE'\n        })\n    } catch (e) {\n\n        return false;\n\n    }\n\n}\n\nexport default moveTo;\n","import React, {useEffect, useState} from 'react';\nimport Card from '../component/board/card';\nimport getCards from \"../service/getCards\";\nimport '../css/Board.css';\nimport moveTo from \"../service/moveTo\";\nimport {Link} from \"react-router-dom\";\n\nfunction Board() {\n    const [cards, updateCards] = useState({});\n    useEffect(() => {\n        (async () => {\n            const cards = await getCards();\n            updateCards(cards);\n        })();\n    }, []);\n\n    const move = async (id) => {\n        const result = await moveTo(id);\n        if (!!result && id === result.id && result.status === 'DONE') {\n            const index = cards.todo.findIndex(task => task.id === id);\n            const [task] = cards.todo.splice(index, 1);\n            task.status = result.status;\n            cards.done.push(task);\n            updateCards({\n                todo: [...cards.todo],\n                done: [...cards.done]\n            });\n        }\n    };\n\n    return (\n        <div className='board'>\n            <div className='board-list'>\n                {\n                    Object.entries(cards).map(([subject, tasks]) => {\n                        return <Card key={subject} subject={subject} tasks={tasks} move={move}/>;\n                    })\n                }\n            </div>\n\n            <Link className='board-link' to=\"/enrollment\">ADD</Link>\n        </div>\n    );\n}\n\nexport default Board;\n","function createCard(...titleList) {\n    const body = titleList.map(title => {\n        return {title}\n    });\n    console.log(body);\n    try {\n        return true;\n    } catch (e) {\n        return false;\n    }\n\n}\n\nexport default createCard;\n","import React from 'react';\nimport '../../../css/Enrollment.css'\nimport Button from \"../../atom/Button\";\n\nfunction Title({id, title, dispatch}) {\n    const onClick = (event) => {\n        event.stopPropagation();\n        dispatch({type: 'REMOVE', id, title});\n    };\n\n    return (\n        <div className='buffer-item'>\n            {title} &nbsp; <Button className='buffer-item-btn' onClick={onClick} value='X'/>\n        </div>\n    );\n}\n\nexport default Title;\n","import React from 'react';\nimport '../../css/Input.css'\n\nfunction Input(props) {\n    const {className, onChange, onKeyPress, value} = props;\n    const inputClasses = ['input', className].join(' ');\n    return (\n        <input id='title' className={inputClasses} onChange={onChange} onKeyPress={onKeyPress} value={value}/>\n    );\n}\n\nexport default Input;\n","import React, {useReducer, useState} from 'react';\nimport '../css/Enrollment.css';\nimport createCard from \"../service/createCard\";\nimport Title from \"../component/enrollment/title\";\nimport Button from \"../component/atom/Button\";\nimport Input from \"../component/atom/Input\";\n\nconst reducer = (buffer, action) => {\n    const {type, id, title} = action;\n    if (type === 'ADD') {\n        return buffer.concat({id, title})\n    } else if (type === 'REMOVE') {\n        const targetIndex = buffer.findIndex(item => id === item.id && title === item.title);\n        buffer.splice(targetIndex, 1);\n        return [...buffer];\n    } else {\n        throw new Error();\n    }\n};\n\nfunction Enrollment({history}) {\n    const [id, setId] = useState(0);\n    const [title, setTitle] = useState('');\n    const [buffer, dispatch] = useReducer(reducer, []);\n\n    const onChange = (event) => {\n        event.stopPropagation();\n        setTitle(event.target.value);\n    };\n\n    const onPreviousClick = (event) => {\n        event.stopPropagation();\n        history.goBack();\n    };\n\n    const add = () => {\n        const {length} = title;\n        if (length > 0) {\n            dispatch({type: 'ADD', id, title});\n            setId(id + 1);\n            setTitle('');\n        }\n    };\n\n    const onAddClick = (event) => {\n        event.stopPropagation();\n        add();\n    };\n\n    const onAddKeyUp = (event) => {\n        event.stopPropagation();\n        if (event.key === 'Enter') {\n            add();\n        }\n    };\n\n    const onClearClick = (event) => {\n        event.stopPropagation();\n        setTitle('');\n    };\n\n    const onSubmitClick = (event) => {\n        event.stopPropagation();\n        const titleList = buffer.map(item => item.title);\n        if (createCard(...titleList)) {\n            history.goBack();\n        }\n    };\n\n    return (\n        <div className='enrollment'>\n            <div className='enrollment-title'>\n                <label htmlFor=\"title\">Title</label>\n                <Input id='title' onChange={onChange} onKeyPress={onAddKeyUp} value={title}/>\n            </div>\n            <div className='buffer'>\n                {\n                    buffer.map(item => {\n                        return <Title key={item.id} id={item.id} title={item.title} dispatch={dispatch}/>;\n                    })\n                }\n            </div>\n            <div className='enrollment-btn-grp'>\n                <Button className='enrollment-btn' onClick={onPreviousClick} value='이전'/>\n                <Button className='enrollment-btn' onClick={onAddClick} value='추가'/>\n                <Button className='enrollment-btn' onClick={onClearClick} value='지우기'/>\n                <Button className='enrollment-btn' onClick={onSubmitClick} value='제출'/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Enrollment;\n","import React from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Board from './page/Board';\nimport Enrollment from \"./page/Enrollment\";\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Route exact path=\"/\" component={Board}/>\n            <Switch>\n                <Route path=\"/enrollment\" component={Enrollment}/>\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}